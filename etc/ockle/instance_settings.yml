# A unified configuration interface for TDC instances.
# Exampled data fields include:
# ----
#chart name:
#  resource:
#    replicas:
#      - all instance needed replicas(ha+computing_unit+disks)
#    ha:
#      - example_replicas
#    computing_unit:
#      - example_replicas
#  database:
#    - type: type
#      name: example_txsql_db_name
#  security:
#   principals:
#     - user: username
#       type: user type (*1)
#
# ----
#(*1) principal.type:
#       'default', (default user of the instance itself)
#       'spnego', (simple and protected GSSAPI negotiation mechanism, user = 'HTTP')
#       'stream', (data stream, user = 'kafka')
#       'rsrcnego' (resource negotiator, user = 'yarn'),
#       'mapred' (map reduce, user = 'mapred'),
#       'dc' (distributed coordinator, user = 'zookeeper')
#       'hbase' (Hadoop database, user = 'hbase')
#       'hdfs': (user = 'hdfs')
#       'hive': (user = 'hive)
#       'pilot': (user = 'pilot')
#       'rubik': (user = 'rubik')
#       'tdt': (user = 'tdt')
#       'workflow': (user = workflow)

common:
  security:
    guardian_address: Transwarp_Guardian_Address
    guardian_ldap_server_address: Transwarp_Guardian_LDAP_Server_Address
    auto_injected_volumes: Transwarp_Auto_Injected_Volumes
    krb_realm: Transwarp_Realm
    krb_principal_suffix: Transwarp_Principal_Suffix

elasticsearch:
  resource:
    replicas:
      - elasticsearchmaster
      - elasticsearchclient
      - elasticsearchdata
      - elasticsearchhead
    ha:
      - elasticsearchclient
      - elasticsearchmaster
    computing_unit:
      - elasticsearchdata
  security:
    principals:
      - user: es
        type: default

filebeat:
  security:
    principals:
      - user: filebeat
        type: default

filerobot:
  security:
    principals:
      - user: filerobot
        type: default

gntenant:
  resource:
    replicas:
      - gn_replicas
    ha:
      - gn_replicas

#governor-proxy:

guardian:
  resource:
    replicas:
      - guardian
      - apacheds
      - casconfigserver
      - casadminserver
      - casserver
      - gencerts
    ha:
      - guardian
      - casserver

hdfs:
  resource:
    replicas:
      - hdfsnamenode
      - hdfszkfc
      - hdfsdatanode
      - hdfsjournalnode
      - httpfs
      - editlogmetric  # value must be the same with hdfsnamenode
    computing_unit:
      - hdfsdatanode
    stable_unit:
      - name: httpfs
        value: 3
      - name: hdfsjournalnode
        value: 3
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: hdfs
        type: default

hyperbase:
  resource:
    replicas:
      - master
      - regionserver
      - thrift
    ha:
      - master
      - thrift
    computing_unit:
      - regionserver
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: hbase
        type: default
      - user: kafka
        type: stream

inceptor:
  resource:
    replicas:
      - inceptor
      - executor
    computing_unit:
      - executor
    disks:
      sata_disks:
        - inceptor_shuffle_dir_counts
    stable_unit:
      - name: inceptor
        value: 1
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: hive
        type: default
      - user: kafka
        type: stream

metastore:
  resource:
    replicas:
      - metastore
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: hive
        type: default

kafka:
  resource:
    replicas:
      - kafka
    computing_unit:
      - kafka
  security:
    principals:
      - user: kafka
        type: default

kafka-manager:
  resource:
    replicas:
      - kafka_manager
    ha:
      - kafka_manager
  security:
    principals:
      - user: kafka
        type: default

kibana:
  resource:
    replicas:
      - kibana_replicas
    ha:
      - kibana_replicas

kong:
  resource:
    replicas:
      - kong
    ha:
      - kong

kong-dashboard:
  resource:
    replicas:
      - kong_dashboard_replicas
    ha:
      - kong_dashboard_replicas

logstash:
  resource:
    replicas:
      - logstash_replicas
    computing_unit:
      - logstash_replicas
#  security:
#    principals:
#      - user: logstash
#        type: default
#      - user: kafka
#        type: stream

notification:
  resource:
    replicas:
      - notification
    ha:
      - notification
  database:
    - name: notification_txsql_db_name

pilot:
  resource:
    replicas:
      - pilot
    ha:
      - pilot
  configuration:
    environment:
      - pilot_env_list
  security:
    principals:
      - user: pilot
        type: default

rubik:
  resource:
    replicas:
      - rubik
    ha:
      - rubik
  database:
    - name: MySQL_DATABASE
  security:
    principals:
      - user: rubik
        type: default

kms:
  resource:
    replicas:
      - kms
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: kms
        type: default
  optional:
    choose_enabled: KMS_ENABLED

slipstream:
  resource:
    replicas:
      - slipstream
      - executor
      - historyserver
    computing_unit:
      - executor
    disks:
      sata_disks:
        - inceptor_shuffle_dir_counts
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: hive
        type: default
      - user: kafka
        type: stream

sophon:
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: hive
        type: default
      - user: yarn
        type: rsrcnego

terminal:
  resource:
    replicas:
      - terminal
    ha:
      - terminal
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: hbase
        type: hbase
      - user: hdfs
        type: hdfs
      - user: hive
        type: hive
      - user: kafka
        type: stream
      - user: pilot
        type: pilot
      - user: rubik
        type: rubik
      - user: tdt
        type: tdt
      - user: workflow
        type: workflow
      - user: yarn
        type: rsrcnego
      - user: zookeeper
        type: dc

tcc:
  resource:
    replicas:
      - tcc
    ha:
      - tcc
  database:
    - name: TCC_TXSQL_DB_NAME
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: tcc
        type: default

tdt:
  resource:
    replicas:
      - tdt
    ha:
      - tdt
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: tdt
        type: default

ticket:
  database:
    - name: ticket_txsql_db_name
  resource:
    replicas:
      - ticket
    ha:
      - ticket

txsql:
  resource:
    replicas:
      - txsql

weblogic:
  resource:
    replicas:
      - ms_replicas
    computing_unit:
      - ms_replicas

workflow:
  resource:
    replicas:
      - workflow
  database:
    - name: workflow_txsql_db_name
  security:
    principals:
      - user: workflow
        type: default

yarn:
  resource:
    replicas:
      - yarnrm
      - yarnnm
      - yarnts
      - yarnhs
    computing_unit:
      - yarnrm
      - yarnnm
    disks:
      sata_disks:
        - yarn_data_disk_replicas
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: yarn
        type: default
      - user: mapred
        type: mapred

zookeeper:
  resource:
    replicas:
      - zookeeper
    stable_unit:
      - name: zookeeper
        value: 3
  security:
    principals:
      - user: HTTP
        type: spnego
      - user: zookeeper
        type: default

smartbi:
  resource:
    replicas:
      - tomcat
    ha:
      - tomcat

pilotenterprise:
  resource:
    replicas:
      - tomcat
    ha:
      - tomcat

catalog:
  security:
    principals:
      - user: hbase
        type: hbase
      - user: kafka
        type: stream
      - user: zookeeper
        type: dc

dbaservice:
  resource:
    replicas:
      - dbaservice
    ha:
      - dbaservice

inceptorgateway:
  resource:
    replicas:
      - inceptorgateway
    ha:
      - inceptorgateway

shiva:
  resource:
    replicas:
      - shivamaster
      - shivatabletserver
      - shivawebserver
    computing_unit:
      - shivamaster
      - shivatabletserver
    ha:
      - shivawebserver

ladder:
  resource:
    replicas:
      - master
      - worker
    computing_unit:
      - worker
    ha:
      - master
